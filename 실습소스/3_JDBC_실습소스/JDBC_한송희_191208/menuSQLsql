CREATE USER menu identified by menu;
grant connect, resource to menu;

CONNECT menu/menu

------------------------------------------------------------------------------------

-- DROP TABLE MEMBER ;

CREATE TABLE MEMBER (
MNO NUMBER PRIMARY KEY,
EMAIL VARCHAR2(20) NOT NULL UNIQUE,
PASSWORD VARCHAR2(20) NOT NULL,
NAME VARCHAR2(20),
ENROLL_DATE DATE DEFAULT SYSDATE,
KH_YN CHAR(2)  DEFAULT 'N' CHECK(KH_YN IN ('Y','N')),
ADMIN_YN CHAR(2) DEFAULT 'N' CHECK(ADMIN_YN IN ('Y','N')),
DELETE_YN CHAR(2)  DEFAULT 'N' CHECK (DELETE_YN IN ('Y','N'))
);

COMMENT ON COLUMN MEMBER.MNO IS '회원 번호';
COMMENT ON COLUMN MEMBER.EMAIL IS '회원 이메일 겸 아이디';
COMMENT ON COLUMN MEMBER.PASSWORD IS '회원 비밀번호';
COMMENT ON COLUMN MEMBER.NAME IS '회원 이름';
COMMENT ON COLUMN MEMBER.KH_YN IS 'KH학원 학생 여부';
COMMENT ON COLUMN MEMBER.ADMIN_YN IS '관리자 여부';


-- DROP SEQUENCE SEQ_MEM_MNO;

CREATE SEQUENCE SEQ_MEM_MNO 
START WITH 1
INCREMENT BY 1
NOCYCLE
;

INSERT INTO MEMBER VALUES(SEQ_MEM_MNO.NEXTVAL, 'ADMIN','ADMIN' , '관리자', DEFAULT, DEFAULT,'Y',DEFAULT);

SELECT * FROM MEMBER ;

-- DELETE FROM MEMBER ;
------------------------------------------------------------------------------------

CREATE TABLE CATEGORY (
CATE_NO NUMBER PRIMARY KEY,
CATE_TITLE VARCHAR2(10)
);

INSERT INTO CATEGORY VALUES(1, '국/탕류');
INSERT INTO CATEGORY VALUES(2, '분식류');
INSERT INTO CATEGORY VALUES(3, '김밥류');

COMMENT ON COLUMN CATEGORY.CATE_NO IS '메뉴 대분류';
COMMENT ON COLUMN CATEGORY.CATE_TITLE IS '1:국탕류, 2:분식류, 3:김밥류';

-- DROP TABLE CATEGORY;
SELECT * FROM CATEGORY;

------------------------------------------------------------------------------------


CREATE TABLE MENU (
MNO NUMBER PRIMARY KEY,
MENU_CATEGORY NUMBER,
MENU_TITLE VARCHAR2(50),
MENU_CONTENT VARCHAR2(200),
MENU_PRICE NUMBER,
MENU_QUANTITY NUMBER,
MENU_DELETE_YN CHAR(2)  DEFAULT 'N' CHECK (MENU_DELETE_YN IN ('Y','N')),
FOREIGN KEY (MENU_CATEGORY) REFERENCES CATEGORY(CATE_NO)
);

-- DROP TABLE MENU;

COMMENT ON COLUMN MENU.MNO IS '메뉴 번호';
COMMENT ON COLUMN MENU.MENU_CATEGORY IS '메뉴 범주';
COMMENT ON COLUMN MENU.MENU_TITLE IS '메뉴 이름';
COMMENT ON COLUMN MENU.MENU_CONTENT IS '메뉴 설명';
COMMENT ON COLUMN MENU.MENU_PRICE IS '메뉴 가격';
COMMENT ON COLUMN MENU.MENU_QUANTITY IS '메뉴 하루 제조수량';
COMMENT ON COLUMN MENU.MENU_DELETE_YN IS '메뉴 삭제 여부';

--DROP SEQUENCE SEQ_MENU_NO;
CREATE SEQUENCE SEQ_MENU_NO
START WITH 1
INCREMENT BY 1
NOCYCLE
CACHE 10;

-- DELETE FROM menu;
INSERT INTO MENU VALUES(SEQ_MENU_NO.NEXTVAL, 1, '갈비탕', '맛이 좋아요. 당면도 들어가있습니다. [ 466 Kcal ]', 12000, 20, 'N' );
INSERT INTO MENU VALUES(SEQ_MENU_NO.NEXTVAL, 1, '순대국', '피순대와 당면순대 선택가능합니다. [ 350 Kcal ]', 7800, 30, 'N' );

INSERT INTO MENU VALUES(SEQ_MENU_NO.NEXTVAL, 2, '떡볶이', '매콤달콤. [ 300 Kcal ]', 3000, 10, 'N' );
INSERT INTO MENU VALUES(SEQ_MENU_NO.NEXTVAL, 2, '순대', '내장섞은 것과 순대만 중에서 선택가능합니다. [ 510 Kcal ]', 3000, 30, 'N' );
INSERT INTO MENU VALUES(SEQ_MENU_NO.NEXTVAL, 2, '튀김', '모둠튀김입니다. [ 196 Kcal ]', 2000, 20, 'N' );

INSERT INTO MENU VALUES(SEQ_MENU_NO.NEXTVAL, 3, '일반김밥', '일반 김밥입니다. [ 200 Kcal ]', 2000, 50, 'N' );
INSERT INTO MENU VALUES(SEQ_MENU_NO.NEXTVAL, 3, '참치김밥', '참치 깁밥입니다. [ 250 Kcal ]', 3000, 10, 'N' );

commit;
SELECT * FROM MENU;

SELECT CATE_TITLE, MENU_TITLE, MENU_QUANTITY, MENU_PRICE FROM MENU JOIN CATEGORY ON (CATE_NO = MENU_CATEGORY) WHERE CATE_NO = 1;
UPDATE MENU SET MENU_QUANTITY = MENU_QUANTITY -1 WHERE MENU_TITLE = '일반김밥';

------------------------------------------------------------------------------------

CREATE OR REPLACE VIEW MENU_LIST 
AS SELECT *
FROM MENU
WHERE MENU_DELETE_YN = 'N';



------------------------------------------------------------------------------------


CREATE TABLE COMMENT_TB (
CNO NUMBER PRIMARY KEY,
COMM_WRITER VARCHAR2(20),
CREATE_DATE DATE DEFAULT SYSDATE,
COMM_CONTENT VARCHAR2(100),
DELETE_YN CHAR(1) CHECK (DELETE_YN IN('Y','N')),
FOREIGN KEY (CNO) REFERENCES MENU(MNO)
);

COMMENT ON COLUMN COMMENT_TB.CNO IS '댓글 번호';
COMMENT ON COLUMN COMMENT_TB.COMM_WRITER IS '댓글 작성자';
COMMENT ON COLUMN COMMENT_TB.CREATE_DATE IS '댓글 작성일';
COMMENT ON COLUMN COMMENT_TB.COMM_CONTENT IS '댓글 내용';
COMMENT ON COLUMN COMMENT_TB.DELETE_YN IS '댓글 삭제 여부';

CREATE SEQUENCE SEQ_COMMENT_NO
START WITH 1
INCREMENT BY 1
NOCYCLE
CACHE 100;

select * from COMMENT_TB;
