package com.kh.variable;

public class D_Cast {
	
	/* 형변환에는 두 종류가 있음
	 * 
	 * [but] 실수는 유한/무한소수 로 나뉘는데 주로 무한이 많아서 실수형을 주로 사용하지 않음
	 * 
	 * 
	 * 1. 자동 형변환
	 * 	- 서로 다른 자료형 연산 시 컴파일러가 
	 *  값의 범위가 작은 자료형을 
	 * 	큰 자료형으로 변환하는 것
	 * 
	 * 2. 강제 형변환
	 * - 값의 범위가 큰 자료형을 작은 자료형으로 
	 * 	강제적으로 변환시키는 것.
	 * - 강제 형변환 시 데이터의 손실이 발생할 수 있으므로
	 * 이를 감안하고 사용. 
	 * 
	 * */
	
	public void rule1() { // 자동 형변환 테스트		
		int i = 12;
		double d = 3.3;
		double result = i + d;
		// i(int) --> i(double)으로 자동 형변환 됨
		
		System.out.println("result : " + result);
		//result : 15.3
		
		// int -> long
		int iNum = 2147483647;
		long lNum = 1000000000L;
		long result2 = iNum + lNum;
		
		System.out.println("result2 : " + result2);
		//result2 : 3147483647
		
		// long -> float
		// long 형이 byte는 더 크지만
		// float가 값의 범위가 더 크므로
		// 자동 형변환 가능
		long lNum2 = 1234567890123456789L;
		float fNum = 10000000000000000000f;
		float result3 = lNum2 + fNum;
		
		System.out.println("result3 : "+ result3 );
		//result3 : 1.1234568E19
		
	
		// char -> int 
		// char 는 실제 문자가 아닌 정수가 저장되고 
		// 저장된 수에 매칭되는 문자가 출력되는 것
		// 그러므로 char는 실제로는 정수형이다.
		
		
		char ch = 'A';
		int iNum3 = ch;		
		System.out.println("iNum : " + iNum3);
		
		char ch2 = 65;
		System.out.println("ch2 : " + ch);
		
		
		
	}
	
	public void rule2() { // 강제 형변환
		
		int iNum = 10;
		double dNum = 5.89;
		
		// iNum + dNum --> 실수형 결과 ( 자동 형변환 )
		double result = iNum + dNum;
		
		// iNum + dNum --> 정수형 결과 ( 강제 형변환 ) 
			
		/*
		 * 1. 대입할/대입될 변수형을 바꾼다 
		 * 2. 강제 형변환해야하는 변수가 여러개 일때  마지막에 한번에 형변환 
		 */
		// int result2 = iNum + dNum; // 에러 발생 
		// int result2 = iNum + (int)dNum; // 1. 예시
		int result2 = (int)(iNum + dNum); //  2. 예시 여러개 일때 
		
		
		
		System.out.println("[ int -> double ] \n result : " + result);
		System.out.println("[ 강제 형변환 double -> (int) ] \n result2 : " + result2);
		
		
		// byte,          short 사용시 주의점 **************** 숙지
		// -128 ~ 127
		//		byte, short 형은 별개의 리터럴이 없으므로 int의 리터럴을 가져옴 = 정수형으로 값을 입력
		//					정수형 = 4byte 이고, byte와  int는 서로 맞지않는 자료형.
		//					-> type missmatch err 발생 
		//					--> 정수형으로 초기화하기때문에 int형으로 인식됨
		//					---> 강제 형변환 필요
		//					* byte, short 단일 대입(초기화)만 가능
		// 
		//
		// ===> byte, short 는 잘 사용하지 않음. int 를 기본으로 사용
		// * 형변환은 정수형, 실수형에서
		
		byte dNum1 = 1;
		byte dNum2 = 10;
		
		// byte result3 = dNum1 + dNum2; // 에러 발생!
		byte result3 = (byte)(dNum1 + dNum2); 
		}
		
		public void dataLoss() {
			
			int iNum = 290;
			
			System.out.println( "iNum : " + iNum ); // 결과값 : 290
			
		
			// 강제 형변환 시 데이터 손실 테스트			
			byte bNum = (byte)iNum; // iNum 값의 앞 24bit 버림
			
			System.out.println("bNum : " + bNum);
			
			char ch1 = 'A';
			char ch2 = 'B';
			String str =  (String)(ch1 + ch2);  
			System.out.println("bNum : " + bNum);
			
		}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}


	